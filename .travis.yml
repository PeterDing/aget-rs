language: rust

dist: xenial

matrix:
  include:
    # Build on linux
    - os: linux
      rust: nightly
      env:
        - TARGET=x86_64-unknown-linux-gnu
        - DEPLOY=true
        - TASK=build

    # Build on osx
    - os: osx
      rust: nightly
      env:
        - TARGET=x86_64-apple-darwin
        - DEPLOY=true
        - TASK=build

    # Code formatting check
    # - os: linux
    #   rust: nightly
    #   env:
    #     - TARGET=x86_64-unknown-linux-gnu
    #     - TASK=fmt-check
    #   # skip the global install step
    #   install:
    #     - rustup component add rustfmt --toolchain nightly-x86_64-unknown-linux-gnu
    #   script: cargo fmt -- --check

    # Test benchmark
    - os: linux
      rust: nightly
      env:
        - TARGET=x86_64-unknown-linux-gnu
        - TASK=benchmark
      install: cargo build
      script: bash ci/benchmark.bash

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - BIN_NAME=ag
    - PROJECT_NAME=aget-rs

sudo: required

before_install:
  - bash ci/before_install.bash

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  - bash ci/script.bash

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "pgzu4C28IYVt3U0HaL92Isnzl2KyID5GUlTy2PUvTMj2RUmAHccPGTgQj9+z417wul0FvPnDYfaXBUGzqusHIsRePWg67V1kEEQ/8BFfEp4lbezXifjQIVYxyDMery0TtAmAX01pKvJzpZbrzhYUgwPi9u2mndE3YIdT67oP5Hn9K0FV/+AhwfOLJ7Ltgv3ghBEOSyJhARpGztUk4cTT+KwOl5NakDWsoml56ts9ljk7KmEGpZZ8lAh+6e7/TYTNpwjpdlELkNT9iIosgBQcwfIQurA2UjVfi3l72WBtyBBrhTQE3CoQrwF+KZnswl7kuZWqVKRG73oVCqRLsyl3tGb9vetLTFE6H70Ya1BIhiDgZ/UKw2VhZwW/CdL0T8+IN38AI4P5CRSrjZMCle7wVimUpOKIxO/7efRHJv4hrabuEzdp7jVWpCzQTqJpbO5u+pg8VHRdcEEVObWtyHSTMnbgE8YNnp1irCLbt9PdaUYBLpyQWVy4zkNrDZ9NSLpxo9DcJQF39RyEmv+OGUfxwZzPgwp8O/mnYfPLTAPBs5urg/Hf9t7jutvW7ooe9D6KjeUwFinIRYrGONnhFT/iBp1jwOLgusT7p5+h8PDnK1sVx1goKNveqGbWmLuksNc/4DWLMJGfEJ3FpiD2yemUHdkBf4bpVlp1NIDxaTlsqPc="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - BIN_NAME: name of the executable binary
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $DEPLOY = true && $TARGET != ""

notifications:
  email:
    on_success: never

# Caching
cache:
  directories:
    - /home/travis/.cargo
before_cache:
  - rm -rf /home/travis/.cargo/registry
